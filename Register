package com.example.superfast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Register extends AppCompatActivity {

    private FirebaseAuth auth;
    private EditText signupEmail, signupPassword, confirmPassword;
    private Button signupButton;
    private TextView loginRedirectText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);

        auth = FirebaseAuth.getInstance();
        signupEmail = findViewById(R.id.signup_email);
        signupPassword = findViewById(R.id.signup_password);
        confirmPassword = findViewById(R.id.signup_confirm);
        signupButton = findViewById(R.id.signup_button);
        loginRedirectText = findViewById(R.id.loginRedirectText);

        signupButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String user = signupEmail.getText().toString().trim();
                String pass = signupPassword.getText().toString().trim();
                String confirmPass = confirmPassword.getText().toString().trim();

                if (user.isEmpty()) {
                    signupEmail.setError("Por favor, introduce un correo electrónico");
                    return;
                }
                if (pass.isEmpty()) {
                    signupPassword.setError("Por favor, introduce una contraseña");
                    return;
                }
                if (confirmPass.isEmpty()) {
                    confirmPassword.setError("Por favor, confirma tu contraseña");
                    return;
                }
                if (pass.length() < 8) {
                    signupPassword.setError("La contraseña debe tener al menos 8 caracteres");
                    return;
                }
                if (!pass.equals(confirmPass)) {
                    confirmPassword.setError("Las contraseñas no coinciden");
                    return;
                }

                String regex = "^(?=.*[_!@#$%^&+=])(?=.*\\d)(?=.*[A-Z]).+$";
                Pattern pattern = Pattern.compile(regex);
                Matcher matcher = pattern.matcher(pass);

                if (!matcher.matches()) {
                    signupPassword.setError("La contraseña debe tener al menos un caracter especial, un número y una mayúscula");
                    return;
                }

                auth.createUserWithEmailAndPassword(user, pass).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            Toast.makeText(Register.this, "¡Te has registrado satisfactoriamente!", Toast.LENGTH_SHORT).show();
                            startActivity(new Intent(Register.this, Login.class));
                        } else {
                            Toast.makeText(Register.this, "No se ha podido registrar" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                        }
                    }
                });
            }
        });

        loginRedirectText.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                startActivity(new Intent(Register.this, Login.class));
            }
        });
    }
}
